import fs from "fs";


export function checkIds(jobsArray: object[]) {
  return jobsArray.forEach((job, index) => {
    if (jobsArray[index].id != index) {
      jobsArray[index].id = index;
    }
  });
}

export function removeJob(jobId: number, profile: string) {
  try {
    const curData = fs.readFileSync(`data/profile.${profile}.json`);
    let dataArray = JSON.parse(curData);

    for (let i = 0; i < dataArray.length; i++) {
      if (dataArray[i].id == jobId) {
        dataArray.splice(i);
      }
    }
  } catch (jsonError) {
    console.log("Removejob Error: ", jsonError);
  }
}

export function addJob(newJob: Job, profile: string){
    try {
    const curData = fs.readFileSync(`data/profile.${profile}.json`, "utf-8");
    const jobsKeyArray = JSON.parse(curData);
    newJob.id = jobsKeyArray.jobs.length;
    jobsKeyArray.jobs.push(newJob);

    fs.writeFileSync(
      `data/profile.${profile}.json`,
      JSON.stringify(jobsKeyArray)
    );
  } catch (jsonError) {
    console.error(jsonError);
  }
};


function createProfile(profileName: string){
  console.log("Creating profile");
  const defaultJson: string = `{"jobs": []}`;

  try {
    const curData = fs.readFileSync(`data/existingProfiles.json`, "utf-8");
    const profilesArray = JSON.parse(curData);

    if (!profilesArray.profiles.includes(profileName)) {
      profilesArray.profiles.push(profileName);
      fs.writeFileSync(
        `data/existingProfiles.json`,
        JSON.stringify(profilesArray)
      );
      fs.writeFileSync(`data/profile.${profileName}.json`, defaultJson);
      console.log("Successfully created new profile");
    } else {
      console.log("profile already exists");
    }
  } catch (e) {
    console.error(e);
  }
}